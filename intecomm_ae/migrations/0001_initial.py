# Generated by Django 5.0.4 on 2024-04-17 10:24

import _socket
import django.db.models.deletion
import django_audit_fields.fields.hostname_modification_field
import django_audit_fields.fields.userfield
import django_audit_fields.fields.uuid_auto_field
import django_audit_fields.models.audit_model_mixin
import django_crypto_fields.fields.encrypted_text_field
import django_revision.revision_field
import edc_action_item.managers
import edc_adverse_event.model_mixins.death_report.death_report_tmg_model_mixin
import edc_model.models.fields.date_estimated
import edc_model.validators.date
import edc_model_fields.fields.other_charfield
import edc_pdf_reports.model_mixins
import edc_protocol.validators
import edc_sites.managers
import edc_utils.date
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('edc_action_item', '0037_remove_actionitem_reference_model_and_more'),
        ('edc_adverse_event', '0014_alter_aeactionclassification_options_and_more'),
        ('sites', '0002_alter_domain_unique'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AeInitial',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60, verbose_name='Hostname created')),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50, verbose_name='Hostname modified')),
                ('device_created', models.CharField(blank=True, max_length=10, verbose_name='Device created')),
                ('device_modified', models.CharField(blank=True, max_length=10, verbose_name='Device modified')),
                ('locale_created', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale created')),
                ('locale_modified', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale modified')),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('subject_identifier', models.CharField(max_length=50)),
                ('action_identifier', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('parent_action_identifier', models.CharField(blank=True, help_text='action identifier that links to parent reference model instance.', max_length=30, null=True)),
                ('related_action_identifier', models.CharField(blank=True, help_text='action identifier that links to related reference model instance.', max_length=30, null=True)),
                ('action_item_reason', models.TextField(editable=False, null=True)),
                ('ae_auto_created', models.BooleanField(default=False, editable=False, max_length=25)),
                ('ae_auto_created_criteria', models.CharField(default='N/A', editable=False, max_length=50)),
                ('report_datetime', models.DateTimeField(default=edc_utils.date.get_utcnow, verbose_name='Report Date and Time')),
                ('ae_description', models.TextField(verbose_name='Adverse Event (AE) description')),
                ('ae_awareness_date', models.DateField(default=edc_utils.date.get_utcnow, validators=[edc_model.validators.date.date_not_future], verbose_name='AE Awareness date')),
                ('ae_start_date', models.DateField(default=edc_utils.date.get_utcnow, validators=[edc_model.validators.date.date_not_future], verbose_name='Actual Start Date of AE')),
                ('ae_grade', models.CharField(choices=[('3', 'Grade III - Severe'), ('4', 'Grade 4 - Life-threatening'), ('5', 'Grade 5 - Death')], max_length=25, verbose_name='Severity of AE')),
                ('ae_classification_as_text', models.CharField(help_text='Keep this simple. Provide details below', max_length=150, null=True, verbose_name='Adverse Event (AE) Classification')),
                ('study_drug_relation', models.CharField(editable=False, max_length=25, null=True, verbose_name='Relation to study drug:')),
                ('ae_classification_other', edc_model_fields.fields.other_charfield.OtherCharField(blank=True, editable=False, max_length=250, null=True, verbose_name='If other, please specify ...')),
                ('ae_treatment', models.TextField(verbose_name='Specify action taken for treatment of AE:')),
                ('action_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='edc_action_item.actionitem')),
                ('ae_classification', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='edc_adverse_event.aeclassification', verbose_name='Adverse Event (AE) Classification')),
                ('parent_action_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='edc_action_item.actionitem')),
                ('related_action_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='edc_action_item.actionitem')),
                ('site', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='sites.site')),
            ],
            options={
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'export', 'import'),
                'default_manager_name': 'objects',
            },
            managers=[
                ('on_site', edc_sites.managers.CurrentSiteManager()),
                ('objects', edc_action_item.managers.ActionIdentifierModelManager()),
            ],
        ),
        migrations.CreateModel(
            name='AeFollowup',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60, verbose_name='Hostname created')),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50, verbose_name='Hostname modified')),
                ('device_created', models.CharField(blank=True, max_length=10, verbose_name='Device created')),
                ('device_modified', models.CharField(blank=True, max_length=10, verbose_name='Device modified')),
                ('locale_created', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale created')),
                ('locale_modified', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale modified')),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('subject_identifier', models.CharField(max_length=50)),
                ('action_identifier', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('parent_action_identifier', models.CharField(blank=True, help_text='action identifier that links to parent reference model instance.', max_length=30, null=True)),
                ('related_action_identifier', models.CharField(blank=True, help_text='action identifier that links to related reference model instance.', max_length=30, null=True)),
                ('action_item_reason', models.TextField(editable=False, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_utils.date.get_utcnow, verbose_name='Report date and time')),
                ('outcome', models.CharField(choices=[('continuing/update', 'Continuing/Update'), ('increase_from_g3', 'Severity increased from Grade III'), ('recovered', 'Recovered/Resolved'), ('recovering', 'Recovering/Resolving at end of study'), ('not_recovered', 'Not Recovered/Resolved at end of study'), ('LTFU', 'Unknown/Lost to follow-up'), ('recovered_with_sequelae', 'Recovered with sequelae'), ('dead', 'Death'), ('ae_withdrawn', 'Adverse event report withdrawn after TMG review')], max_length=25)),
                ('outcome_date', models.DateField(validators=[edc_model.validators.date.date_not_future])),
                ('ae_grade', models.CharField(choices=[('4', 'Grade 4 - Life-threatening'), ('5', 'Grade 5 - Death'), ('N/A', 'Not applicable')], default='N/A', max_length=25, verbose_name='If severity increased, indicate grade')),
                ('relevant_history', models.TextField(help_text='Indicate Adverse Event, clinical results,medications given, dosage,treatment plan and outcomes.', max_length=1000, verbose_name='Description summary of Adverse Event outcome')),
                ('followup', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', help_text='If NO, this will be considered the final report', max_length=15, verbose_name='Is a follow-up to this report required?')),
                ('action_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='edc_action_item.actionitem')),
                ('parent_action_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='edc_action_item.actionitem')),
                ('related_action_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='edc_action_item.actionitem')),
                ('site', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='sites.site')),
                ('ae_initial', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='intecomm_ae.aeinitial')),
            ],
            options={
                'verbose_name': 'AE Followup',
                'verbose_name_plural': 'AE Followups',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'export', 'import'),
                'default_manager_name': 'objects',
            },
            managers=[
                ('objects', edc_action_item.managers.ActionIdentifierModelManager()),
                ('on_site', edc_action_item.managers.ActionIdentifierSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name='AeSusar',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60, verbose_name='Hostname created')),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50, verbose_name='Hostname modified')),
                ('device_created', models.CharField(blank=True, max_length=10, verbose_name='Device created')),
                ('device_modified', models.CharField(blank=True, max_length=10, verbose_name='Device modified')),
                ('locale_created', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale created')),
                ('locale_modified', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale modified')),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('report_status', models.CharField(choices=[('open', 'Open. Some information is still pending.'), ('closed', 'Closed. This report is complete')], max_length=25, verbose_name='What is the status of this report?')),
                ('report_closed_datetime', models.DateTimeField(blank=True, null=True, validators=[edc_model.validators.date.datetime_not_future], verbose_name='Date and time report closed.')),
                ('subject_identifier', models.CharField(max_length=50)),
                ('action_identifier', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('parent_action_identifier', models.CharField(blank=True, help_text='action identifier that links to parent reference model instance.', max_length=30, null=True)),
                ('related_action_identifier', models.CharField(blank=True, help_text='action identifier that links to related reference model instance.', max_length=30, null=True)),
                ('action_item_reason', models.TextField(editable=False, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_utils.date.get_utcnow, validators=[edc_model.validators.date.datetime_not_future], verbose_name='Report date and time')),
                ('submitted_datetime', models.DateTimeField(blank=True, null=True, validators=[edc_model.validators.date.datetime_not_future], verbose_name='AE SUSAR submitted on')),
                ('action_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='edc_action_item.actionitem')),
                ('ae_initial', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='intecomm_ae.aeinitial')),
                ('parent_action_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='edc_action_item.actionitem')),
                ('related_action_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='edc_action_item.actionitem')),
                ('site', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='sites.site')),
            ],
            options={
                'verbose_name': 'AE SUSAR Report',
                'verbose_name_plural': 'AE SUSAR Reports',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'export', 'import'),
                'default_manager_name': 'objects',
            },
            managers=[
                ('objects', edc_action_item.managers.ActionIdentifierModelManager()),
                ('on_site', edc_action_item.managers.ActionIdentifierSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name='AeTmg',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60, verbose_name='Hostname created')),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50, verbose_name='Hostname modified')),
                ('device_created', models.CharField(blank=True, max_length=10, verbose_name='Device created')),
                ('device_modified', models.CharField(blank=True, max_length=10, verbose_name='Device modified')),
                ('locale_created', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale created')),
                ('locale_modified', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale modified')),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('report_status', models.CharField(choices=[('open', 'Open. Some information is still pending.'), ('closed', 'Closed. This report is complete')], max_length=25, verbose_name='What is the status of this report?')),
                ('report_closed_datetime', models.DateTimeField(blank=True, null=True, validators=[edc_model.validators.date.datetime_not_future], verbose_name='Date and time report closed.')),
                ('subject_identifier', models.CharField(max_length=50)),
                ('action_identifier', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('parent_action_identifier', models.CharField(blank=True, help_text='action identifier that links to parent reference model instance.', max_length=30, null=True)),
                ('related_action_identifier', models.CharField(blank=True, help_text='action identifier that links to related reference model instance.', max_length=30, null=True)),
                ('action_item_reason', models.TextField(editable=False, null=True)),
                ('slug', models.CharField(db_index=True, default='', editable=False, help_text='a field used for quick search', max_length=250, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_utils.date.get_utcnow, validators=[edc_model.validators.date.datetime_not_future], verbose_name='Report date and time')),
                ('ae_received_datetime', models.DateTimeField(blank=True, null=True, validators=[edc_model.validators.date.datetime_not_future], verbose_name='Date and time AE form received:')),
                ('clinical_review_datetime', models.DateTimeField(blank=True, null=True, validators=[edc_model.validators.date.datetime_not_future], verbose_name='Date and time of clinical review: ')),
                ('ae_description', models.TextField(blank=True, null=True, verbose_name='Description of AE:')),
                ('investigator_comments', models.TextField(blank=True, null=True, verbose_name="This investigator's comments:")),
                ('ae_classification', models.CharField(blank=True, max_length=150, null=True)),
                ('ae_classification_other', edc_model_fields.fields.other_charfield.OtherCharField(blank=True, max_length=250, null=True, verbose_name='If other, please specify ...')),
                ('original_report_agreed', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='If No, explain in the narrative below', max_length=15, null=True, verbose_name='Does this investigator agree with the original AE report?')),
                ('investigator_narrative', models.TextField(blank=True, null=True, verbose_name='Narrative')),
                ('investigator_ae_classification_agreed', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', help_text='If No, select a classification below', max_length=15, verbose_name='Does this investigator agree with the AE classification on the original AE report?')),
                ('investigator_ae_classification_other', edc_model_fields.fields.other_charfield.OtherCharField(blank=True, max_length=250, null=True, verbose_name='If other, please specify ...')),
                ('officials_notified', models.DateTimeField(blank=True, null=True, validators=[edc_model.validators.date.datetime_not_future], verbose_name='Date and time regulatory authorities notified (SUSARs)')),
                ('action_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='edc_action_item.actionitem')),
                ('ae_initial', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='intecomm_ae.aeinitial')),
                ('investigator_ae_classification', models.ForeignKey(help_text='Only applicable if this investigator does not agree with the original AE report', null=True, on_delete=django.db.models.deletion.PROTECT, to='edc_adverse_event.aeclassification', verbose_name='Adverse Event (AE) Classification')),
                ('parent_action_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='edc_action_item.actionitem')),
                ('related_action_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='edc_action_item.actionitem')),
                ('site', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='sites.site')),
            ],
            options={
                'verbose_name': 'AE TMG Report',
                'verbose_name_plural': 'AE TMG Reports',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'export', 'import'),
                'default_manager_name': 'objects',
            },
            managers=[
                ('objects', edc_action_item.managers.ActionIdentifierModelManager()),
                ('on_site', edc_action_item.managers.ActionIdentifierSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name='DeathReport',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60, verbose_name='Hostname created')),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50, verbose_name='Hostname modified')),
                ('device_created', models.CharField(blank=True, max_length=10, verbose_name='Device created')),
                ('device_modified', models.CharField(blank=True, max_length=10, verbose_name='Device modified')),
                ('locale_created', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale created')),
                ('locale_modified', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale modified')),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('subject_identifier', models.CharField(max_length=50, unique=True)),
                ('action_identifier', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('parent_action_identifier', models.CharField(blank=True, help_text='action identifier that links to parent reference model instance.', max_length=30, null=True)),
                ('related_action_identifier', models.CharField(blank=True, help_text='action identifier that links to related reference model instance.', max_length=30, null=True)),
                ('action_item_reason', models.TextField(editable=False, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_utils.date.get_utcnow, validators=[edc_protocol.validators.datetime_not_before_study_start, edc_model.validators.date.datetime_not_future], verbose_name='Report Date')),
                ('death_datetime', models.DateTimeField(null=True, validators=[edc_protocol.validators.datetime_not_before_study_start, edc_model.validators.date.datetime_not_future], verbose_name='Date and Time of Death')),
                ('death_date', models.DateField(null=True, validators=[edc_protocol.validators.date_not_before_study_start, edc_model.validators.date.date_not_future], verbose_name='Date of Death')),
                ('death_as_inpatient', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True, verbose_name='Death as inpatient')),
                ('cause_of_death_other', edc_model_fields.fields.other_charfield.OtherCharField(blank=True, max_length=100, null=True, verbose_name='If other, please specify ...')),
                ('narrative', models.TextField(null=True, verbose_name='Narrative')),
                ('study_day', models.IntegerField(default=0, editable=False, help_text='not used')),
                ('cause_of_death', models.TextField(help_text='Main cause of death in the opinion of the local study doctor and local PI', null=True, verbose_name='Main cause of death')),
                ('death_location', models.CharField(choices=[('home', 'At home'), ('hospital_clinic', 'Hospital/clinic'), ('elsewhere', 'Elsewhere')], max_length=50, verbose_name='Where did the participant die?')),
                ('hospital_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='If death occurred at hospital / clinic, please give name of the facility')),
                ('informant_contact', django_crypto_fields.fields.encrypted_text_field.EncryptedTextField(blank=True, help_text=' (Encryption: AES local)', max_length=71, null=True)),
                ('informant_relationship', models.CharField(choices=[('husband_wife', 'Husband/wife'), ('Parent', 'Parent'), ('child', 'Child'), ('unknown', 'Unknown'), ('OTHER', 'Other')], max_length=50, verbose_name='Informants relationship to the participant?')),
                ('other_informant_relationship', edc_model_fields.fields.other_charfield.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If other, please specify ...')),
                ('death_certificate', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=15, verbose_name='Is a death certificate is available?')),
                ('action_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='edc_action_item.actionitem')),
                ('parent_action_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='edc_action_item.actionitem')),
                ('related_action_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='edc_action_item.actionitem')),
                ('site', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='sites.site')),
            ],
            options={
                'verbose_name': 'Death Report',
                'verbose_name_plural': 'Death Reports',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'export', 'import'),
                'default_manager_name': 'objects',
            },
            bases=(edc_pdf_reports.model_mixins.PdfReportModelMixin, models.Model),
            managers=[
                ('objects', edc_action_item.managers.ActionIdentifierModelManager()),
                ('on_site', edc_action_item.managers.ActionIdentifierSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name='DeathReportTmg',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60, verbose_name='Hostname created')),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50, verbose_name='Hostname modified')),
                ('device_created', models.CharField(blank=True, max_length=10, verbose_name='Device created')),
                ('device_modified', models.CharField(blank=True, max_length=10, verbose_name='Device modified')),
                ('locale_created', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale created')),
                ('locale_modified', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale modified')),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('report_status', models.CharField(choices=[('open', 'Open. Some information is still pending.'), ('closed', 'Closed. This report is complete')], max_length=25, verbose_name='What is the status of this report?')),
                ('report_closed_datetime', models.DateTimeField(blank=True, null=True, validators=[edc_model.validators.date.datetime_not_future], verbose_name='Date and time report closed.')),
                ('subject_identifier', models.CharField(max_length=50)),
                ('action_identifier', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('parent_action_identifier', models.CharField(blank=True, help_text='action identifier that links to parent reference model instance.', max_length=30, null=True)),
                ('related_action_identifier', models.CharField(blank=True, help_text='action identifier that links to related reference model instance.', max_length=30, null=True)),
                ('action_item_reason', models.TextField(editable=False, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_utils.date.get_utcnow, validators=[edc_protocol.validators.datetime_not_before_study_start, edc_model.validators.date.datetime_not_future], verbose_name='Report Date')),
                ('cause_of_death_other', models.CharField(blank=True, max_length=100, null=True, verbose_name='If "Other" above, please specify')),
                ('cause_of_death_agreed', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='If No, explain in the narrative below', max_length=15, null=True, verbose_name='Is the cause of death agreed between study doctor and TMG member?')),
                ('narrative', models.TextField(blank=True, null=True, verbose_name='Narrative')),
                ('action_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='edc_action_item.actionitem')),
                ('cause_of_death', models.ForeignKey(help_text='Main cause of death in the opinion of the local study doctor and local PI', null=True, on_delete=django.db.models.deletion.PROTECT, to='edc_adverse_event.causeofdeath', verbose_name='Main cause of death')),
                ('death_report', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='intecomm_ae.deathreport')),
                ('parent_action_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='edc_action_item.actionitem')),
                ('related_action_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='edc_action_item.actionitem')),
                ('site', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='sites.site')),
            ],
            options={
                'verbose_name': 'Death Report TMG (1st)',
                'verbose_name_plural': 'Death Report TMG (1st)',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'export', 'import'),
                'default_manager_name': 'objects',
            },
            managers=[
                ('objects', edc_adverse_event.model_mixins.death_report.death_report_tmg_model_mixin.DeathReportTmgManager()),
                ('on_site', edc_adverse_event.model_mixins.death_report.death_report_tmg_model_mixin.DeathReportTmgSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name='DeathReportTmgSecond',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('intecomm_ae.deathreporttmg',),
            managers=[
                ('objects', edc_adverse_event.model_mixins.death_report.death_report_tmg_model_mixin.DeathReportTmgManager()),
                ('on_site', edc_adverse_event.model_mixins.death_report.death_report_tmg_model_mixin.DeathReportTmgSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalAeFollowup',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60, verbose_name='Hostname created')),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50, verbose_name='Hostname modified')),
                ('device_created', models.CharField(blank=True, max_length=10, verbose_name='Device created')),
                ('device_modified', models.CharField(blank=True, max_length=10, verbose_name='Device modified')),
                ('locale_created', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale created')),
                ('locale_modified', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale modified')),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('subject_identifier', models.CharField(max_length=50)),
                ('action_identifier', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('parent_action_identifier', models.CharField(blank=True, help_text='action identifier that links to parent reference model instance.', max_length=30, null=True)),
                ('related_action_identifier', models.CharField(blank=True, help_text='action identifier that links to related reference model instance.', max_length=30, null=True)),
                ('action_item_reason', models.TextField(editable=False, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_utils.date.get_utcnow, verbose_name='Report date and time')),
                ('outcome', models.CharField(choices=[('continuing/update', 'Continuing/Update'), ('increase_from_g3', 'Severity increased from Grade III'), ('recovered', 'Recovered/Resolved'), ('recovering', 'Recovering/Resolving at end of study'), ('not_recovered', 'Not Recovered/Resolved at end of study'), ('LTFU', 'Unknown/Lost to follow-up'), ('recovered_with_sequelae', 'Recovered with sequelae'), ('dead', 'Death'), ('ae_withdrawn', 'Adverse event report withdrawn after TMG review')], max_length=25)),
                ('outcome_date', models.DateField(validators=[edc_model.validators.date.date_not_future])),
                ('ae_grade', models.CharField(choices=[('4', 'Grade 4 - Life-threatening'), ('5', 'Grade 5 - Death'), ('N/A', 'Not applicable')], default='N/A', max_length=25, verbose_name='If severity increased, indicate grade')),
                ('relevant_history', models.TextField(help_text='Indicate Adverse Event, clinical results,medications given, dosage,treatment plan and outcomes.', max_length=1000, verbose_name='Description summary of Adverse Event outcome')),
                ('followup', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', help_text='If NO, this will be considered the final report', max_length=15, verbose_name='Is a follow-up to this report required?')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('action_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_action_item.actionitem')),
                ('ae_initial', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='intecomm_ae.aeinitial')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent_action_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_action_item.actionitem')),
                ('related_action_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_action_item.actionitem')),
                ('site', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.site')),
            ],
            options={
                'verbose_name': 'historical AE Followup',
                'verbose_name_plural': 'historical AE Followups',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAeInitial',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60, verbose_name='Hostname created')),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50, verbose_name='Hostname modified')),
                ('device_created', models.CharField(blank=True, max_length=10, verbose_name='Device created')),
                ('device_modified', models.CharField(blank=True, max_length=10, verbose_name='Device modified')),
                ('locale_created', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale created')),
                ('locale_modified', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale modified')),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('subject_identifier', models.CharField(max_length=50)),
                ('action_identifier', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('parent_action_identifier', models.CharField(blank=True, help_text='action identifier that links to parent reference model instance.', max_length=30, null=True)),
                ('related_action_identifier', models.CharField(blank=True, help_text='action identifier that links to related reference model instance.', max_length=30, null=True)),
                ('action_item_reason', models.TextField(editable=False, null=True)),
                ('ae_auto_created', models.BooleanField(default=False, editable=False, max_length=25)),
                ('ae_auto_created_criteria', models.CharField(default='N/A', editable=False, max_length=50)),
                ('report_datetime', models.DateTimeField(default=edc_utils.date.get_utcnow, verbose_name='Report Date and Time')),
                ('ae_description', models.TextField(verbose_name='Adverse Event (AE) description')),
                ('ae_awareness_date', models.DateField(default=edc_utils.date.get_utcnow, validators=[edc_model.validators.date.date_not_future], verbose_name='AE Awareness date')),
                ('ae_start_date', models.DateField(default=edc_utils.date.get_utcnow, validators=[edc_model.validators.date.date_not_future], verbose_name='Actual Start Date of AE')),
                ('ae_grade', models.CharField(choices=[('3', 'Grade III - Severe'), ('4', 'Grade 4 - Life-threatening'), ('5', 'Grade 5 - Death')], max_length=25, verbose_name='Severity of AE')),
                ('ae_classification_as_text', models.CharField(help_text='Keep this simple. Provide details below', max_length=150, null=True, verbose_name='Adverse Event (AE) Classification')),
                ('study_drug_relation', models.CharField(editable=False, max_length=25, null=True, verbose_name='Relation to study drug:')),
                ('ae_classification_other', edc_model_fields.fields.other_charfield.OtherCharField(blank=True, editable=False, max_length=250, null=True, verbose_name='If other, please specify ...')),
                ('ae_treatment', models.TextField(verbose_name='Specify action taken for treatment of AE:')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('action_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_action_item.actionitem')),
                ('ae_classification', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_adverse_event.aeclassification', verbose_name='Adverse Event (AE) Classification')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent_action_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_action_item.actionitem')),
                ('related_action_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_action_item.actionitem')),
                ('site', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.site')),
            ],
            options={
                'verbose_name': 'historical ae initial',
                'verbose_name_plural': 'historical ae initials',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAeSusar',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60, verbose_name='Hostname created')),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50, verbose_name='Hostname modified')),
                ('device_created', models.CharField(blank=True, max_length=10, verbose_name='Device created')),
                ('device_modified', models.CharField(blank=True, max_length=10, verbose_name='Device modified')),
                ('locale_created', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale created')),
                ('locale_modified', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale modified')),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('report_status', models.CharField(choices=[('open', 'Open. Some information is still pending.'), ('closed', 'Closed. This report is complete')], max_length=25, verbose_name='What is the status of this report?')),
                ('report_closed_datetime', models.DateTimeField(blank=True, null=True, validators=[edc_model.validators.date.datetime_not_future], verbose_name='Date and time report closed.')),
                ('subject_identifier', models.CharField(max_length=50)),
                ('action_identifier', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('parent_action_identifier', models.CharField(blank=True, help_text='action identifier that links to parent reference model instance.', max_length=30, null=True)),
                ('related_action_identifier', models.CharField(blank=True, help_text='action identifier that links to related reference model instance.', max_length=30, null=True)),
                ('action_item_reason', models.TextField(editable=False, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_utils.date.get_utcnow, validators=[edc_model.validators.date.datetime_not_future], verbose_name='Report date and time')),
                ('submitted_datetime', models.DateTimeField(blank=True, null=True, validators=[edc_model.validators.date.datetime_not_future], verbose_name='AE SUSAR submitted on')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('action_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_action_item.actionitem')),
                ('ae_initial', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='intecomm_ae.aeinitial')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent_action_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_action_item.actionitem')),
                ('related_action_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_action_item.actionitem')),
                ('site', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.site')),
            ],
            options={
                'verbose_name': 'historical AE SUSAR Report',
                'verbose_name_plural': 'historical AE SUSAR Reports',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAeTmg',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60, verbose_name='Hostname created')),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50, verbose_name='Hostname modified')),
                ('device_created', models.CharField(blank=True, max_length=10, verbose_name='Device created')),
                ('device_modified', models.CharField(blank=True, max_length=10, verbose_name='Device modified')),
                ('locale_created', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale created')),
                ('locale_modified', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale modified')),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('report_status', models.CharField(choices=[('open', 'Open. Some information is still pending.'), ('closed', 'Closed. This report is complete')], max_length=25, verbose_name='What is the status of this report?')),
                ('report_closed_datetime', models.DateTimeField(blank=True, null=True, validators=[edc_model.validators.date.datetime_not_future], verbose_name='Date and time report closed.')),
                ('subject_identifier', models.CharField(max_length=50)),
                ('action_identifier', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('parent_action_identifier', models.CharField(blank=True, help_text='action identifier that links to parent reference model instance.', max_length=30, null=True)),
                ('related_action_identifier', models.CharField(blank=True, help_text='action identifier that links to related reference model instance.', max_length=30, null=True)),
                ('action_item_reason', models.TextField(editable=False, null=True)),
                ('slug', models.CharField(db_index=True, default='', editable=False, help_text='a field used for quick search', max_length=250, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_utils.date.get_utcnow, validators=[edc_model.validators.date.datetime_not_future], verbose_name='Report date and time')),
                ('ae_received_datetime', models.DateTimeField(blank=True, null=True, validators=[edc_model.validators.date.datetime_not_future], verbose_name='Date and time AE form received:')),
                ('clinical_review_datetime', models.DateTimeField(blank=True, null=True, validators=[edc_model.validators.date.datetime_not_future], verbose_name='Date and time of clinical review: ')),
                ('ae_description', models.TextField(blank=True, null=True, verbose_name='Description of AE:')),
                ('investigator_comments', models.TextField(blank=True, null=True, verbose_name="This investigator's comments:")),
                ('ae_classification', models.CharField(blank=True, max_length=150, null=True)),
                ('ae_classification_other', edc_model_fields.fields.other_charfield.OtherCharField(blank=True, max_length=250, null=True, verbose_name='If other, please specify ...')),
                ('original_report_agreed', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='If No, explain in the narrative below', max_length=15, null=True, verbose_name='Does this investigator agree with the original AE report?')),
                ('investigator_narrative', models.TextField(blank=True, null=True, verbose_name='Narrative')),
                ('investigator_ae_classification_agreed', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', help_text='If No, select a classification below', max_length=15, verbose_name='Does this investigator agree with the AE classification on the original AE report?')),
                ('investigator_ae_classification_other', edc_model_fields.fields.other_charfield.OtherCharField(blank=True, max_length=250, null=True, verbose_name='If other, please specify ...')),
                ('officials_notified', models.DateTimeField(blank=True, null=True, validators=[edc_model.validators.date.datetime_not_future], verbose_name='Date and time regulatory authorities notified (SUSARs)')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('action_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_action_item.actionitem')),
                ('ae_initial', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='intecomm_ae.aeinitial')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('investigator_ae_classification', models.ForeignKey(blank=True, db_constraint=False, help_text='Only applicable if this investigator does not agree with the original AE report', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_adverse_event.aeclassification', verbose_name='Adverse Event (AE) Classification')),
                ('parent_action_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_action_item.actionitem')),
                ('related_action_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_action_item.actionitem')),
                ('site', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.site')),
            ],
            options={
                'verbose_name': 'historical AE TMG Report',
                'verbose_name_plural': 'historical AE TMG Reports',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDeathReport',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60, verbose_name='Hostname created')),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50, verbose_name='Hostname modified')),
                ('device_created', models.CharField(blank=True, max_length=10, verbose_name='Device created')),
                ('device_modified', models.CharField(blank=True, max_length=10, verbose_name='Device modified')),
                ('locale_created', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale created')),
                ('locale_modified', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale modified')),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('subject_identifier', models.CharField(db_index=True, max_length=50)),
                ('action_identifier', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('parent_action_identifier', models.CharField(blank=True, help_text='action identifier that links to parent reference model instance.', max_length=30, null=True)),
                ('related_action_identifier', models.CharField(blank=True, help_text='action identifier that links to related reference model instance.', max_length=30, null=True)),
                ('action_item_reason', models.TextField(editable=False, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_utils.date.get_utcnow, validators=[edc_protocol.validators.datetime_not_before_study_start, edc_model.validators.date.datetime_not_future], verbose_name='Report Date')),
                ('death_datetime', models.DateTimeField(null=True, validators=[edc_protocol.validators.datetime_not_before_study_start, edc_model.validators.date.datetime_not_future], verbose_name='Date and Time of Death')),
                ('death_date', models.DateField(null=True, validators=[edc_protocol.validators.date_not_before_study_start, edc_model.validators.date.date_not_future], verbose_name='Date of Death')),
                ('death_as_inpatient', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True, verbose_name='Death as inpatient')),
                ('cause_of_death_other', edc_model_fields.fields.other_charfield.OtherCharField(blank=True, max_length=100, null=True, verbose_name='If other, please specify ...')),
                ('narrative', models.TextField(null=True, verbose_name='Narrative')),
                ('study_day', models.IntegerField(default=0, editable=False, help_text='not used')),
                ('cause_of_death', models.TextField(help_text='Main cause of death in the opinion of the local study doctor and local PI', null=True, verbose_name='Main cause of death')),
                ('death_location', models.CharField(choices=[('home', 'At home'), ('hospital_clinic', 'Hospital/clinic'), ('elsewhere', 'Elsewhere')], max_length=50, verbose_name='Where did the participant die?')),
                ('hospital_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='If death occurred at hospital / clinic, please give name of the facility')),
                ('informant_contact', django_crypto_fields.fields.encrypted_text_field.EncryptedTextField(blank=True, help_text=' (Encryption: AES local)', max_length=71, null=True)),
                ('informant_relationship', models.CharField(choices=[('husband_wife', 'Husband/wife'), ('Parent', 'Parent'), ('child', 'Child'), ('unknown', 'Unknown'), ('OTHER', 'Other')], max_length=50, verbose_name='Informants relationship to the participant?')),
                ('other_informant_relationship', edc_model_fields.fields.other_charfield.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If other, please specify ...')),
                ('death_certificate', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=15, verbose_name='Is a death certificate is available?')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('action_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_action_item.actionitem')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent_action_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_action_item.actionitem')),
                ('related_action_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_action_item.actionitem')),
                ('site', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.site')),
            ],
            options={
                'verbose_name': 'historical Death Report',
                'verbose_name_plural': 'historical Death Reports',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDeathReportTmg',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60, verbose_name='Hostname created')),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50, verbose_name='Hostname modified')),
                ('device_created', models.CharField(blank=True, max_length=10, verbose_name='Device created')),
                ('device_modified', models.CharField(blank=True, max_length=10, verbose_name='Device modified')),
                ('locale_created', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale created')),
                ('locale_modified', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale modified')),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('report_status', models.CharField(choices=[('open', 'Open. Some information is still pending.'), ('closed', 'Closed. This report is complete')], max_length=25, verbose_name='What is the status of this report?')),
                ('report_closed_datetime', models.DateTimeField(blank=True, null=True, validators=[edc_model.validators.date.datetime_not_future], verbose_name='Date and time report closed.')),
                ('subject_identifier', models.CharField(max_length=50)),
                ('action_identifier', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('parent_action_identifier', models.CharField(blank=True, help_text='action identifier that links to parent reference model instance.', max_length=30, null=True)),
                ('related_action_identifier', models.CharField(blank=True, help_text='action identifier that links to related reference model instance.', max_length=30, null=True)),
                ('action_item_reason', models.TextField(editable=False, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_utils.date.get_utcnow, validators=[edc_protocol.validators.datetime_not_before_study_start, edc_model.validators.date.datetime_not_future], verbose_name='Report Date')),
                ('cause_of_death_other', models.CharField(blank=True, max_length=100, null=True, verbose_name='If "Other" above, please specify')),
                ('cause_of_death_agreed', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='If No, explain in the narrative below', max_length=15, null=True, verbose_name='Is the cause of death agreed between study doctor and TMG member?')),
                ('narrative', models.TextField(blank=True, null=True, verbose_name='Narrative')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('action_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_action_item.actionitem')),
                ('cause_of_death', models.ForeignKey(blank=True, db_constraint=False, help_text='Main cause of death in the opinion of the local study doctor and local PI', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_adverse_event.causeofdeath', verbose_name='Main cause of death')),
                ('death_report', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='intecomm_ae.deathreport')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent_action_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_action_item.actionitem')),
                ('related_action_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_action_item.actionitem')),
                ('site', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.site')),
            ],
            options={
                'verbose_name': 'historical Death Report TMG (1st)',
                'verbose_name_plural': 'historical Death Report TMG (1st)',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDeathReportTmgSecond',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60, verbose_name='Hostname created')),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50, verbose_name='Hostname modified')),
                ('device_created', models.CharField(blank=True, max_length=10, verbose_name='Device created')),
                ('device_modified', models.CharField(blank=True, max_length=10, verbose_name='Device modified')),
                ('locale_created', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale created')),
                ('locale_modified', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale modified')),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('report_status', models.CharField(choices=[('open', 'Open. Some information is still pending.'), ('closed', 'Closed. This report is complete')], max_length=25, verbose_name='What is the status of this report?')),
                ('report_closed_datetime', models.DateTimeField(blank=True, null=True, validators=[edc_model.validators.date.datetime_not_future], verbose_name='Date and time report closed.')),
                ('subject_identifier', models.CharField(max_length=50)),
                ('action_identifier', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('parent_action_identifier', models.CharField(blank=True, help_text='action identifier that links to parent reference model instance.', max_length=30, null=True)),
                ('related_action_identifier', models.CharField(blank=True, help_text='action identifier that links to related reference model instance.', max_length=30, null=True)),
                ('action_item_reason', models.TextField(editable=False, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_utils.date.get_utcnow, validators=[edc_protocol.validators.datetime_not_before_study_start, edc_model.validators.date.datetime_not_future], verbose_name='Report Date')),
                ('cause_of_death_other', models.CharField(blank=True, max_length=100, null=True, verbose_name='If "Other" above, please specify')),
                ('cause_of_death_agreed', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='If No, explain in the narrative below', max_length=15, null=True, verbose_name='Is the cause of death agreed between study doctor and TMG member?')),
                ('narrative', models.TextField(blank=True, null=True, verbose_name='Narrative')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('action_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_action_item.actionitem')),
                ('cause_of_death', models.ForeignKey(blank=True, db_constraint=False, help_text='Main cause of death in the opinion of the local study doctor and local PI', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_adverse_event.causeofdeath', verbose_name='Main cause of death')),
                ('death_report', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='intecomm_ae.deathreport')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent_action_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_action_item.actionitem')),
                ('related_action_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_action_item.actionitem')),
                ('site', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.site')),
            ],
            options={
                'verbose_name': 'historical death report tmg second',
                'verbose_name_plural': 'historical death report tmg seconds',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalHospitalization',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60, verbose_name='Hostname created')),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50, verbose_name='Hostname modified')),
                ('device_created', models.CharField(blank=True, max_length=10, verbose_name='Device created')),
                ('device_modified', models.CharField(blank=True, max_length=10, verbose_name='Device modified')),
                ('locale_created', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale created')),
                ('locale_modified', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale modified')),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('subject_identifier', models.CharField(max_length=50)),
                ('action_identifier', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('parent_action_identifier', models.CharField(blank=True, help_text='action identifier that links to parent reference model instance.', max_length=30, null=True)),
                ('related_action_identifier', models.CharField(blank=True, help_text='action identifier that links to related reference model instance.', max_length=30, null=True)),
                ('action_item_reason', models.TextField(editable=False, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_utils.date.get_utcnow, validators=[edc_protocol.validators.datetime_not_before_study_start, edc_model.validators.date.datetime_not_future], verbose_name='Report Date')),
                ('have_details', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=15, verbose_name='Do you have details of the hospitalization?')),
                ('admitted_date', models.DateField(validators=[edc_model.validators.date.date_not_future, edc_protocol.validators.date_not_before_study_start], verbose_name='When was the patient admitted?')),
                ('admitted_date_estimated', edc_model.models.fields.date_estimated.IsDateEstimatedField(choices=[('-', 'No'), ('D', 'Yes, estimated the Day'), ('MD', 'Yes, estimated Month and Day'), ('YMD', 'Yes, estimated Year, Month and Day')], help_text='If the exact date is not known, please indicate which part of the date is estimated.', max_length=25, verbose_name='Is this date estimated?')),
                ('discharged', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('unknown', 'Unknown')], max_length=15, verbose_name='Has the patient been discharged?')),
                ('discharged_date', models.DateField(blank=True, null=True, validators=[edc_model.validators.date.date_not_future, edc_protocol.validators.date_not_before_study_start], verbose_name='If YES, give date discharged')),
                ('discharged_date_estimated', edc_model.models.fields.date_estimated.IsDateEstimatedFieldNa(choices=[('N/A', 'Not applicable'), ('not_estimated', 'No'), ('D', 'Yes, estimated the Day'), ('MD', 'Yes, estimated Month and Day'), ('YMD', 'Yes, estimated Year, Month and Day')], default='N/A', help_text='If the exact date is not known, please indicate which part of the date is estimated.', max_length=25, verbose_name='If YES, is this date estimated?')),
                ('narrative', models.TextField(blank=True, max_length=500, null=True, verbose_name='Narrative')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('action_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_action_item.actionitem')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent_action_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_action_item.actionitem')),
                ('related_action_item', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_action_item.actionitem')),
                ('site', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.site')),
            ],
            options={
                'verbose_name': 'historical Hospitalization',
                'verbose_name_plural': 'historical Hospitalization',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Hospitalization',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60, verbose_name='Hostname created')),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50, verbose_name='Hostname modified')),
                ('device_created', models.CharField(blank=True, max_length=10, verbose_name='Device created')),
                ('device_modified', models.CharField(blank=True, max_length=10, verbose_name='Device modified')),
                ('locale_created', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale created')),
                ('locale_modified', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale modified')),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('subject_identifier', models.CharField(max_length=50)),
                ('action_identifier', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('parent_action_identifier', models.CharField(blank=True, help_text='action identifier that links to parent reference model instance.', max_length=30, null=True)),
                ('related_action_identifier', models.CharField(blank=True, help_text='action identifier that links to related reference model instance.', max_length=30, null=True)),
                ('action_item_reason', models.TextField(editable=False, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_utils.date.get_utcnow, validators=[edc_protocol.validators.datetime_not_before_study_start, edc_model.validators.date.datetime_not_future], verbose_name='Report Date')),
                ('have_details', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=15, verbose_name='Do you have details of the hospitalization?')),
                ('admitted_date', models.DateField(validators=[edc_model.validators.date.date_not_future, edc_protocol.validators.date_not_before_study_start], verbose_name='When was the patient admitted?')),
                ('admitted_date_estimated', edc_model.models.fields.date_estimated.IsDateEstimatedField(choices=[('-', 'No'), ('D', 'Yes, estimated the Day'), ('MD', 'Yes, estimated Month and Day'), ('YMD', 'Yes, estimated Year, Month and Day')], help_text='If the exact date is not known, please indicate which part of the date is estimated.', max_length=25, verbose_name='Is this date estimated?')),
                ('discharged', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('unknown', 'Unknown')], max_length=15, verbose_name='Has the patient been discharged?')),
                ('discharged_date', models.DateField(blank=True, null=True, validators=[edc_model.validators.date.date_not_future, edc_protocol.validators.date_not_before_study_start], verbose_name='If YES, give date discharged')),
                ('discharged_date_estimated', edc_model.models.fields.date_estimated.IsDateEstimatedFieldNa(choices=[('N/A', 'Not applicable'), ('not_estimated', 'No'), ('D', 'Yes, estimated the Day'), ('MD', 'Yes, estimated Month and Day'), ('YMD', 'Yes, estimated Year, Month and Day')], default='N/A', help_text='If the exact date is not known, please indicate which part of the date is estimated.', max_length=25, verbose_name='If YES, is this date estimated?')),
                ('narrative', models.TextField(blank=True, max_length=500, null=True, verbose_name='Narrative')),
                ('action_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='edc_action_item.actionitem')),
                ('parent_action_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='edc_action_item.actionitem')),
                ('related_action_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='edc_action_item.actionitem')),
                ('site', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='sites.site')),
            ],
            options={
                'verbose_name': 'Hospitalization',
                'verbose_name_plural': 'Hospitalization',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'export', 'import'),
                'default_manager_name': 'objects',
            },
            managers=[
                ('on_site', edc_sites.managers.CurrentSiteManager()),
                ('objects', edc_action_item.managers.ActionIdentifierModelManager()),
            ],
        ),
        migrations.AddIndex(
            model_name='aeinitial',
            index=models.Index(fields=['subject_identifier'], name='intecomm_ae_subject_155c2e_idx'),
        ),
        migrations.AddIndex(
            model_name='aeinitial',
            index=models.Index(fields=['action_identifier', 'action_item', 'related_action_item', 'parent_action_item'], name='intecomm_ae_action__0c4217_idx'),
        ),
        migrations.AddIndex(
            model_name='aeinitial',
            index=models.Index(fields=['modified', 'created'], name='intecomm_ae_modifie_fdff72_idx'),
        ),
        migrations.AddIndex(
            model_name='aeinitial',
            index=models.Index(fields=['user_modified', 'user_created'], name='intecomm_ae_user_mo_4bd6c1_idx'),
        ),
        migrations.AddIndex(
            model_name='aefollowup',
            index=models.Index(fields=['subject_identifier'], name='intecomm_ae_subject_a0869e_idx'),
        ),
        migrations.AddIndex(
            model_name='aefollowup',
            index=models.Index(fields=['action_identifier', 'action_item', 'related_action_item', 'parent_action_item'], name='intecomm_ae_action__3099a7_idx'),
        ),
        migrations.AddIndex(
            model_name='aefollowup',
            index=models.Index(fields=['subject_identifier', 'action_identifier', 'site', 'id'], name='intecomm_ae_subject_3226fe_idx'),
        ),
        migrations.AddIndex(
            model_name='aefollowup',
            index=models.Index(fields=['modified', 'created'], name='intecomm_ae_modifie_d686c6_idx'),
        ),
        migrations.AddIndex(
            model_name='aefollowup',
            index=models.Index(fields=['user_modified', 'user_created'], name='intecomm_ae_user_mo_4e2aff_idx'),
        ),
        migrations.AddIndex(
            model_name='aesusar',
            index=models.Index(fields=['subject_identifier'], name='intecomm_ae_subject_50e2e0_idx'),
        ),
        migrations.AddIndex(
            model_name='aesusar',
            index=models.Index(fields=['action_identifier', 'action_item', 'related_action_item', 'parent_action_item'], name='intecomm_ae_action__feb740_idx'),
        ),
        migrations.AddIndex(
            model_name='aesusar',
            index=models.Index(fields=['subject_identifier', 'action_identifier', 'site', 'id'], name='intecomm_ae_subject_9b4c12_idx'),
        ),
        migrations.AddIndex(
            model_name='aesusar',
            index=models.Index(fields=['modified', 'created'], name='intecomm_ae_modifie_ae0678_idx'),
        ),
        migrations.AddIndex(
            model_name='aesusar',
            index=models.Index(fields=['user_modified', 'user_created'], name='intecomm_ae_user_mo_927aee_idx'),
        ),
        migrations.AddIndex(
            model_name='aetmg',
            index=models.Index(fields=['subject_identifier'], name='intecomm_ae_subject_a182a3_idx'),
        ),
        migrations.AddIndex(
            model_name='aetmg',
            index=models.Index(fields=['action_identifier', 'action_item', 'related_action_item', 'parent_action_item'], name='intecomm_ae_action__ec3996_idx'),
        ),
        migrations.AddIndex(
            model_name='aetmg',
            index=models.Index(fields=['subject_identifier', 'action_identifier', 'site', 'id'], name='intecomm_ae_subject_eb45aa_idx'),
        ),
        migrations.AddIndex(
            model_name='aetmg',
            index=models.Index(fields=['modified', 'created'], name='intecomm_ae_modifie_a1aa7e_idx'),
        ),
        migrations.AddIndex(
            model_name='aetmg',
            index=models.Index(fields=['user_modified', 'user_created'], name='intecomm_ae_user_mo_753370_idx'),
        ),
        migrations.AddIndex(
            model_name='deathreport',
            index=models.Index(fields=['action_identifier', 'action_item', 'related_action_item', 'parent_action_item'], name='intecomm_ae_action__dc0ac5_idx'),
        ),
        migrations.AddIndex(
            model_name='deathreport',
            index=models.Index(fields=['subject_identifier', 'action_identifier', 'site', 'id'], name='intecomm_ae_subject_da04cf_idx'),
        ),
        migrations.AddIndex(
            model_name='deathreport',
            index=models.Index(fields=['modified', 'created'], name='intecomm_ae_modifie_b7d689_idx'),
        ),
        migrations.AddIndex(
            model_name='deathreport',
            index=models.Index(fields=['user_modified', 'user_created'], name='intecomm_ae_user_mo_d87c5d_idx'),
        ),
        migrations.AddIndex(
            model_name='deathreporttmg',
            index=models.Index(fields=['subject_identifier'], name='intecomm_ae_subject_91820c_idx'),
        ),
        migrations.AddIndex(
            model_name='deathreporttmg',
            index=models.Index(fields=['action_identifier', 'action_item', 'related_action_item', 'parent_action_item'], name='intecomm_ae_action__3601b2_idx'),
        ),
        migrations.AddIndex(
            model_name='deathreporttmg',
            index=models.Index(fields=['subject_identifier', 'action_identifier', 'site', 'id'], name='intecomm_ae_subject_a1637a_idx'),
        ),
        migrations.AddIndex(
            model_name='deathreporttmg',
            index=models.Index(fields=['modified', 'created'], name='intecomm_ae_modifie_73a21b_idx'),
        ),
        migrations.AddIndex(
            model_name='deathreporttmg',
            index=models.Index(fields=['user_modified', 'user_created'], name='intecomm_ae_user_mo_d94467_idx'),
        ),
        migrations.AddIndex(
            model_name='hospitalization',
            index=models.Index(fields=['subject_identifier'], name='intecomm_ae_subject_152c93_idx'),
        ),
        migrations.AddIndex(
            model_name='hospitalization',
            index=models.Index(fields=['modified', 'created'], name='intecomm_ae_modifie_83f4ad_idx'),
        ),
        migrations.AddIndex(
            model_name='hospitalization',
            index=models.Index(fields=['user_modified', 'user_created'], name='intecomm_ae_user_mo_ab1ea2_idx'),
        ),
        migrations.AddIndex(
            model_name='hospitalization',
            index=models.Index(fields=['subject_identifier', 'site'], name='intecomm_ae_subject_7604a4_idx'),
        ),
    ]
