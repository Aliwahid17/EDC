# Generated by Django 5.0.4 on 2024-04-17 10:26

import _socket
import django.core.validators
import django.db.models.deletion
import django_audit_fields.fields.hostname_modification_field
import django_audit_fields.fields.userfield
import django_audit_fields.fields.uuid_auto_field
import django_audit_fields.models.audit_model_mixin
import django_revision.revision_field
import edc_facility.model_mixins
import edc_model_fields.fields.other_charfield
import edc_sites.managers
import edc_utils.date
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('edc_facility', '0013_alter_healthfacility_site_and_more'),
        ('sites', '0002_alter_domain_unique'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalHealthFacility',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60, verbose_name='Hostname created')),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50, verbose_name='Hostname modified')),
                ('device_created', models.CharField(blank=True, max_length=10, verbose_name='Device created')),
                ('device_modified', models.CharField(blank=True, max_length=10, verbose_name='Device modified')),
                ('locale_created', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale created')),
                ('locale_modified', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale modified')),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('report_datetime', models.DateTimeField(default=edc_utils.date.get_utcnow)),
                ('name', models.CharField(db_index=True, max_length=25)),
                ('health_facility_type_other', edc_model_fields.fields.other_charfield.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If other, please specify ...')),
                ('gps', models.CharField(blank=True, help_text='copy and paste directly from google maps', max_length=50, null=True)),
                ('latitude', models.FloatField(blank=True, help_text='in degrees. copy and paste directly from google maps', null=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('longitude', models.FloatField(blank=True, help_text='in degrees. copy and paste directly from google maps', null=True, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('mon', models.BooleanField()),
                ('tue', models.BooleanField()),
                ('wed', models.BooleanField()),
                ('thu', models.BooleanField()),
                ('fri', models.BooleanField()),
                ('sat', models.BooleanField()),
                ('sun', models.BooleanField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('distance', models.IntegerField(help_text="In km. If within the integrated-care clinic facility type '0'", verbose_name='Approximate distance from integrated-care clinic')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('health_facility_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_facility.healthfacilitytypes', verbose_name='Health facility type')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.site')),
            ],
            options={
                'verbose_name': 'historical Health Facility',
                'verbose_name_plural': 'historical Health Facilities',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HealthFacility',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60, verbose_name='Hostname created')),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50, verbose_name='Hostname modified')),
                ('device_created', models.CharField(blank=True, max_length=10, verbose_name='Device created')),
                ('device_modified', models.CharField(blank=True, max_length=10, verbose_name='Device modified')),
                ('locale_created', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale created')),
                ('locale_modified', models.CharField(blank=True, help_text='Auto-updated by Modeladmin', max_length=10, null=True, verbose_name='Locale modified')),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('report_datetime', models.DateTimeField(default=edc_utils.date.get_utcnow)),
                ('name', models.CharField(max_length=25, unique=True)),
                ('health_facility_type_other', edc_model_fields.fields.other_charfield.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If other, please specify ...')),
                ('gps', models.CharField(blank=True, help_text='copy and paste directly from google maps', max_length=50, null=True)),
                ('latitude', models.FloatField(blank=True, help_text='in degrees. copy and paste directly from google maps', null=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('longitude', models.FloatField(blank=True, help_text='in degrees. copy and paste directly from google maps', null=True, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('mon', models.BooleanField()),
                ('tue', models.BooleanField()),
                ('wed', models.BooleanField()),
                ('thu', models.BooleanField()),
                ('fri', models.BooleanField()),
                ('sat', models.BooleanField()),
                ('sun', models.BooleanField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('distance', models.IntegerField(help_text="In km. If within the integrated-care clinic facility type '0'", verbose_name='Approximate distance from integrated-care clinic')),
                ('health_facility_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='edc_facility.healthfacilitytypes', verbose_name='Health facility type')),
                ('site', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='sites.site')),
            ],
            options={
                'verbose_name': 'Health Facility',
                'verbose_name_plural': 'Health Facilities',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'export', 'import'),
                'default_manager_name': 'objects',
                'indexes': [models.Index(fields=['modified', 'created'], name='intecomm_fa_modifie_2d984c_idx'), models.Index(fields=['user_modified', 'user_created'], name='intecomm_fa_user_mo_6ab1a3_idx')],
            },
            managers=[
                ('objects', edc_facility.model_mixins.Manager()),
                ('on_site', edc_sites.managers.CurrentSiteManager()),
            ],
        ),
    ]
